@page "/register"
@rendermode InteractiveServer

<PageTitle>Register - Event Scheduler</PageTitle>

<link rel="stylesheet" href="/css/auth.css" />

<div class="auth-container">
    <div class="auth-card">
        <div class="auth-card-header">
            <h3>
                <i class="bi bi-person-plus"></i>
                Create Account
            </h3>
            <p class="auth-card-subtitle">Join Event Scheduler today</p>
        </div>

        <div class="auth-card-body">
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="auth-alert auth-alert-danger" role="alert">
                    <i class="bi bi-exclamation-triangle"></i>
                    @errorMessage
                </div>
            }

            <EditForm Model="@registerRequest" OnValidSubmit="@HandleRegister" class="auth-form">
                <DataAnnotationsValidator />
                
                <div class="form-group">
                    <label for="fullname" class="form-label">
                        <i class="bi bi-person-badge"></i>
                        Full Name
                    </label>
                    <InputText id="fullname" class="form-control" @bind-Value="registerRequest.FullName" 
                               placeholder="Enter your full name" autocomplete="name" />
                    <ValidationMessage For="@(() => registerRequest.FullName)" />
                </div>

                <div class="form-group">
                    <label for="username" class="form-label">
                        <i class="bi bi-person"></i>
                        Username
                    </label>
                    <InputText id="username" class="form-control" @bind-Value="registerRequest.Username" 
                               placeholder="Choose a username" autocomplete="username" />
                    <ValidationMessage For="@(() => registerRequest.Username)" />
                </div>

                <div class="form-group">
                    <label for="email" class="form-label">
                        <i class="bi bi-envelope"></i>
                        Email
                    </label>
                    <InputText id="email" type="email" class="form-control" @bind-Value="registerRequest.Email" 
                               placeholder="Enter your email" autocomplete="email" />
                    <ValidationMessage For="@(() => registerRequest.Email)" />
                </div>

                <div class="form-group">
                    <label for="password" class="form-label">
                        <i class="bi bi-lock"></i>
                        Password
                    </label>
                    <InputText id="password" type="password" class="form-control" @bind-Value="registerRequest.Password" 
                               @oninput="OnPasswordInput" placeholder="Choose a strong password" />
                    
                    @if (!string.IsNullOrEmpty(registerRequest.Password))
                    {
                        <div class="password-strength-indicator">
                            <div class="strength-bar-container">
                                <div class="strength-bar @GetPasswordStrengthClass()" style="width: @(passwordStrength * 25)%"></div>
                            </div>
                            <small class="strength-text @GetPasswordStrengthClass()">
                                <i class="bi bi-shield-@(passwordStrength >= 3 ? "check" : "exclamation")"></i>
                                @GetPasswordStrengthText()
                            </small>
                        </div>
                    }
                    
                    <small class="form-text">
                        <i class="bi bi-info-circle"></i>
                        Password must contain:
                        <ul class="password-requirements">
                            <li class="@(registerRequest.Password?.Length >= 8 ? "met" : "")">
                                <i class="bi bi-@(registerRequest.Password?.Length >= 8 ? "check-circle-fill" : "circle")"></i>
                                At least 8 characters
                            </li>
                            <li class="@(HasUpperCase(registerRequest.Password) ? "met" : "")">
                                <i class="bi bi-@(HasUpperCase(registerRequest.Password) ? "check-circle-fill" : "circle")"></i>
                                One uppercase letter
                            </li>
                            <li class="@(HasLowerCase(registerRequest.Password) ? "met" : "")">
                                <i class="bi bi-@(HasLowerCase(registerRequest.Password) ? "check-circle-fill" : "circle")"></i>
                                One lowercase letter
                            </li>
                            <li class="@(HasDigit(registerRequest.Password) ? "met" : "")">
                                <i class="bi bi-@(HasDigit(registerRequest.Password) ? "check-circle-fill" : "circle")"></i>
                                One number
                            </li>
                        </ul>
                    </small>
                    <ValidationMessage For="@(() => registerRequest.Password)" />
                </div>

                <button type="submit" class="auth-btn auth-btn-primary" disabled="@isLoading">
                    @if (isLoading)
                    {
                        <span class="auth-spinner"></span>
                        <span>Creating Account...</span>
                    }
                    else
                    {
                        <i class="bi bi-person-plus"></i>
                        <span>Create Account</span>
                    }
                </button>
            </EditForm>
        </div>


        <div class="auth-footer">
            <p>Already have an account? <a href="/login">Login here</a></p>
        </div>
    </div>
</div>
